name: Security Audit

on:
  schedule:
    - cron: '0 0 * * 0' # Run weekly on Sunday at midnight
  workflow_dispatch: # Allow manual triggering
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'middleware.ts'
      - 'middleware/**'
      - 'src/middleware/**'
      - 'next.config.js'

jobs:
  security-audit:
    name: Run Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          if ! npm audit --json > npm-audit.json; then
            echo "npm audit found vulnerabilities, but continuing workflow..."
            echo "Vulnerabilities will be checked in the next step"
          fi

      - name: Run custom security audit
        run: |
          if npm run security-audit:report; then
            echo "Custom security audit completed successfully"
          else
            echo "Custom security audit failed or script not found"
            echo "Creating empty security audit report for continuity"
            echo "# Security Audit Report" > security-audit-report.md
            echo "" >> security-audit-report.md
            echo "Custom security audit script not found or failed to execute." >> security-audit-report.md
            echo "Please ensure the security-audit:report npm script is properly configured." >> security-audit-report.md
          fi

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-path: .gitleaks.toml

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always() # Upload reports even if previous steps failed
        with:
          name: security-reports
          path: |
            npm-audit.json
            security-audit-report.md
          retention-days: 30

      - name: Check for high severity vulnerabilities
        run: |
          HIGH_VULNS=$(grep -c '"severity":"high"' npm-audit.json || true)
          CRITICAL_VULNS=$(grep -c '"severity":"critical"' npm-audit.json || true)

          if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "Found $HIGH_VULNS high severity and $CRITICAL_VULNS critical severity vulnerabilities"
            exit 1
          else
            echo "No high or critical severity vulnerabilities found"
          fi

          if grep -q "### High Severity" security-audit-report.md; then
            echo "High severity issues found in custom security audit!"
            exit 1
          fi

  dependency-review:
    name: Review Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          deny-licenses: 'GPL-3.0, AGPL-3.0'

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  notify:
    name: Notify on Failure
    needs: [security-audit, dependency-review, codeql-analysis]
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Send Slack notification (only if webhook configured)
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK || '' }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
          # Check if Slack webhook secret is configured and not empty
          if [ -n "$SLACK_WEBHOOK" ] && [ "$SLACK_WEBHOOK" != "" ]; then
            echo "Slack webhook found, sending notification..."

            # Validate webhook URL format (basic check for https://)
            if [[ "$SLACK_WEBHOOK" =~ ^https://hooks\.slack\.com ]]; then
              # Send notification with error handling
              if curl -X POST \
                -H 'Content-type: application/json' \
                --data '{
                  "username": "Security Audit",
                  "icon_emoji": ":warning:",
                  "attachments": [
                    {
                      "color": "danger",
                      "title": "Security Audit Failed",
                      "text": "Security audit detected issues in the Global Travel Report repository.",
                      "footer": "Global Travel Report Security Audit",
                      "fields": [
                        {
                          "title": "Repository",
                          "value": "${GITHUB_REPOSITORY}",
                          "short": true
                        },
                        {
                          "title": "Branch",
                          "value": "${GITHUB_REF}",
                          "short": true
                        },
                        {
                          "title": "Run URL",
                          "value": "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}",
                          "short": false
                        }
                      ]
                    }
                  ]
                }' \
                "$SLACK_WEBHOOK"; then
                echo "Slack notification sent successfully"
              else
                echo "Failed to send Slack notification"
              fi
            else
              echo "Invalid Slack webhook URL format. Expected https://hooks.slack.com"
              exit 1
            fi
          else
            echo "No Slack webhook configured or webhook is empty, skipping notification"
          fi