
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run linting
      run: npm run lint
    - name: Run type checking
      run: npm run typecheck
    - name: Run build
      run: npm run build
    - name: Generate security report
      if: always()
      run: |
        echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Code quality checks completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 **Detailed security analysis available in:**" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifacts**: Download \`security-report\` for full vulnerability details" >> $GITHUB_STEP_SUMMARY
        echo "- **Summary**: Check the security-audit job for comprehensive analysis" >> $GITHUB_STEP_SUMMARY

  security-audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run security audit
      id: audit
      run: npm audit --json --audit-level moderate > security-audit-report.json
      continue-on-error: true
    - name: Generate suggested fixes
      id: audit-fix-dry-run
      run: |
        npm audit fix --dry-run --json > security-fix-suggestions.json || echo '{"fixes": [], "message": "No suggested fixes available"}' > security-fix-suggestions.json
      continue-on-error: true
    - name: Analyze vulnerabilities
      id: analyze-vulnerabilities
      run: |
        # Parse audit results to check for critical/high severity issues
        if [ -f security-audit-report.json ]; then
          # Count vulnerabilities by severity
          critical_count=$(cat security-audit-report.json | jq '.metadata.vulnerabilities.critical // 0')
          high_count=$(cat security-audit-report.json | jq '.metadata.vulnerabilities.high // 0')
          moderate_count=$(cat security-audit-report.json | jq '.metadata.vulnerabilities.moderate // 0')
          low_count=$(cat security-audit-report.json | jq '.metadata.vulnerabilities.low // 0')

          echo "critical=$critical_count" >> $GITHUB_OUTPUT
          echo "high=$high_count" >> $GITHUB_OUTPUT
          echo "moderate=$moderate_count" >> $GITHUB_OUTPUT
          echo "low=$low_count" >> $GITHUB_OUTPUT

          echo "📊 Vulnerability Summary:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔴 Critical: $critical_count" >> $GITHUB_STEP_SUMMARY
          echo "- 🟠 High: $high_count" >> $GITHUB_STEP_SUMMARY
          echo "- 🟡 Moderate: $moderate_count" >> $GITHUB_STEP_SUMMARY
          echo "- 🟢 Low: $low_count" >> $GITHUB_STEP_SUMMARY
        else
          echo "No audit report generated" >> $GITHUB_STEP_SUMMARY
        fi
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: |
          security-audit-report.json
          security-fix-suggestions.json
        retention-days: 30
    - name: Check for critical/high vulnerabilities after suggested fixes
      run: |
        # Check if critical or high vulnerabilities remain
        critical_count="${{ steps.analyze-vulnerabilities.outputs.critical }}"
        high_count="${{ steps.analyze-vulnerabilities.outputs.high }}"

        if [ "$critical_count" -gt 0 ] || [ "$high_count" -gt 0 ]; then
          echo "❌ Security audit failed - critical or high severity vulnerabilities found"
          echo "🔍 Critical: $critical_count"
          echo "🟠 High: $high_count"
          echo ""
          echo "📋 Suggested fixes are available in the security-fix-suggestions.json artifact"
          echo "🔧 Please review and apply the suggested fixes before merging"
          echo ""
          echo "📊 Full vulnerability details available in security-audit-report.json artifact"
          exit 1
        else
          echo "✅ No critical or high severity vulnerabilities found"
          echo "📊 Security audit passed successfully"
        fi
    - name: Generate comprehensive security summary
      if: always()
      run: |
        echo "## 🔒 Comprehensive Security Audit Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ -f security-audit-report.json ]; then
          echo "📋 **Audit Results:**" >> $GITHUB_STEP_SUMMARY
          echo "- **Report**: Available in \`security-report\` artifact" >> $GITHUB_STEP_SUMMARY
          echo "- **Suggested Fixes**: Available in \`security-report\` artifact" >> $GITHUB_STEP_SUMMARY
          echo "- **Retention**: Artifacts kept for 30 days" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Show top vulnerabilities if any exist
          if [ "$(cat security-audit-report.json | jq '.vulnerabilities | length')" -gt 0 ]; then
            echo "🚨 **Top Security Issues:**" >> $GITHUB_STEP_SUMMARY
            cat security-audit-report.json | jq -r '.vulnerabilities[0:5] | to_entries[] | "- \(.value.severity | ascii_upcase): \(.value.title) (\(.value.module_name)@\(.value.range))"' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📖 **Full details**: Download the security-report artifact for complete analysis" >> $GITHUB_STEP_SUMMARY
          else
